@startuml

start

:通过参数的值创建节点;
:判断节点类型，做不通的操作;
if(文本节点) 
    :通过document.createTextNode创建真实的文本节点;
elseif(空节点)
    :什么都不做;
elseif(数组节点)
    :遍历数组;
    :将数组每一项递归创建节点;
elseif(DOM节点)
    :通过document.createElement创建真实的DOM对象;
    :立即设置该真实DOM元素的各种属性;
    :遍历对应React元素的children属性，递归操作;

elseif(组件节点)
    if(组件节点) then(函数组件)
        :调用函数(该函数必须返回一个可以生成节点的内容);
        :将该函数的返回结果递归生成节点;
    else(类组件)
        :建该类的实例;
        :立即调用对象的生命周期方法：static getDerivedStateFromProps;
        :运行该对象的render方法，拿到节点对象1. （将该节点递归操作，回到第1步进行反复操作）;
        :将该组件的componentDidMount加入到执行队列（先进先出，先进先执行）;
        :当整个虚拟DOM树全部构建完毕，并且将真实的DOM对象加入到容器中后，执行该队列;
    endif
endif
:生成出虚拟DOM树之后，将该树保存起来，以便后续使用;
:将之前生成的真实的DOM对象，加入到容器中;

stop

@enduml