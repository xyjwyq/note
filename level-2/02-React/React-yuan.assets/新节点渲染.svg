<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="748px" preserveAspectRatio="none" style="width:1763px;height:748px;" version="1.1" viewBox="0 0 1763 748" width="1763px" zoomAndPan="magnify"><defs><filter height="300%" id="fwwgkfepb1reh" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><ellipse cx="881.5" cy="20" fill="#000000" filter="url(#fwwgkfepb1reh)" rx="10" ry="10" style="stroke: none; stroke-width: 1.0;"/><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="140" x="811.5" y="50"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="120" x="821.5" y="73.752">通过参数的值创建节点</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="176" x="793.5" y="106.3887"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="156" x="803.5" y="130.1406">判断节点类型，做不通的操作</text><polygon fill="#FEFECE" filter="url(#fwwgkfepb1reh)" points="136,162.7773,180,162.7773,192,174.7773,180,186.7773,136,186.7773,124,174.7773,136,162.7773" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="136" y="179.8718">文本节点</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="296" x="10" y="206.7773"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="276" x="20" y="230.5293">通过document.createTextNode创建真实的文本节点</text><polygon fill="#FEFECE" filter="url(#fwwgkfepb1reh)" points="339.5,162.7773,372.5,162.7773,384.5,174.7773,372.5,186.7773,339.5,186.7773,327.5,174.7773,339.5,162.7773" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="339.5" y="179.8718">空节点</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="80" x="316" y="206.7773"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="60" x="326" y="230.5293">什么都不做</text><polygon fill="#FEFECE" filter="url(#fwwgkfepb1reh)" points="466,162.7773,510,162.7773,522,174.7773,510,186.7773,466,186.7773,454,174.7773,466,162.7773" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="466" y="179.8718">数组节点</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="68" x="454" y="206.7773"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48" x="464" y="230.5293">遍历数组</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="164" x="406" y="278.166"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="144" x="416" y="301.918">将数组每一项递归创建节点</text><polygon fill="#FEFECE" filter="url(#fwwgkfepb1reh)" points="704,162.7773,749,162.7773,761,174.7773,749,186.7773,704,186.7773,692,174.7773,704,162.7773" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="704" y="179.8718">DOM节点</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="293" x="580" y="206.7773"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="273" x="590" y="230.5293">通过document.createElement创建真实的DOM对象</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="215" x="619" y="278.166"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="195" x="629" y="301.918">立即设置该真实DOM元素的各种属性</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="264" x="594.5" y="349.5547"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="244" x="604.5" y="373.3066">遍历对应React元素的children属性，递归操作</text><polygon fill="#FEFECE" filter="url(#fwwgkfepb1reh)" points="1237,162.7773,1281,162.7773,1293,174.7773,1281,186.7773,1237,186.7773,1225,174.7773,1237,162.7773" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="1237" y="179.8718">组件节点</text><polygon fill="#FEFECE" filter="url(#fwwgkfepb1reh)" points="1237,206.7773,1281,206.7773,1293,218.7773,1281,230.7773,1237,230.7773,1225,218.7773,1237,206.7773" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="1237" y="223.8718">组件节点</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="1181" y="216.3604">函数组件</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="1293" y="216.3604">类组件</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="292" x="903" y="240.7773"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="272" x="913" y="264.5293">调用函数(该函数必须返回一个可以生成节点的内容)</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="200" x="949" y="312.166"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="180" x="959" y="335.918">将该函数的返回结果递归生成节点</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="92" x="1423" y="240.7773"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="1433" y="264.5293">建该类的实例</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="369" x="1284.5" y="312.166"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="349" x="1294.5" y="335.918">立即调用对象的生命周期方法：static getDerivedStateFromProps</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="508" x="1215" y="383.5547"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="488" x="1225" y="407.3066">运行该对象的render方法，拿到节点对象1. （将该节点递归操作，回到第1步进行反复操作）</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="422" x="1258" y="439.9434"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="402" x="1268" y="463.6953">将该组件的componentDidMount加入到执行队列（先进先出，先进先执行）</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="482" x="1228" y="496.332"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="462" x="1238" y="520.084">当整个虚拟DOM树全部构建完毕，并且将真实的DOM对象加入到容器中后，执行该队列</text><polygon fill="#FEFECE" filter="url(#fwwgkfepb1reh)" points="1259,538.7207,1271,550.7207,1259,562.7207,1247,550.7207,1259,538.7207" style="stroke: #A80036; stroke-width: 1.5;"/><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="323" x="720" y="602.7207"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="303" x="730" y="626.4727">生成出虚拟DOM树之后，将该树保存起来，以便后续使用</text><rect fill="#FEFECE" filter="url(#fwwgkfepb1reh)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="263" x="750" y="659.1094"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="243" x="760" y="682.8613">将之前生成的真实的DOM对象，加入到容器中</text><ellipse cx="881.5" cy="726.498" fill="#FFFFFF" filter="url(#fwwgkfepb1reh)" rx="11" ry="11" style="stroke: #000000; stroke-width: 1.0;"/><ellipse cx="881.5" cy="726.498" fill="#000000" rx="6" ry="6" style="stroke: #7F7F7F; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="881.5" x2="881.5" y1="30" y2="50"/><polygon fill="#A80036" points="877.5,40,881.5,50,885.5,40,881.5,44" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="881.5" x2="881.5" y1="86.3887" y2="106.3887"/><polygon fill="#A80036" points="877.5,96.3887,881.5,106.3887,885.5,96.3887,881.5,100.3887" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="488" x2="488" y1="243.166" y2="278.166"/><polygon fill="#A80036" points="484,268.166,488,278.166,492,268.166,488,272.166" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="726.5" x2="726.5" y1="243.166" y2="278.166"/><polygon fill="#A80036" points="722.5,268.166,726.5,278.166,730.5,268.166,726.5,272.166" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="726.5" x2="726.5" y1="314.5547" y2="349.5547"/><polygon fill="#A80036" points="722.5,339.5547,726.5,349.5547,730.5,339.5547,726.5,343.5547" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1049" x2="1049" y1="277.166" y2="312.166"/><polygon fill="#A80036" points="1045,302.166,1049,312.166,1053,302.166,1049,306.166" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1469" x2="1469" y1="277.166" y2="312.166"/><polygon fill="#A80036" points="1465,302.166,1469,312.166,1473,302.166,1469,306.166" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1469" x2="1469" y1="348.5547" y2="383.5547"/><polygon fill="#A80036" points="1465,373.5547,1469,383.5547,1473,373.5547,1469,377.5547" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1469" x2="1469" y1="419.9434" y2="439.9434"/><polygon fill="#A80036" points="1465,429.9434,1469,439.9434,1473,429.9434,1469,433.9434" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1469" x2="1469" y1="476.332" y2="496.332"/><polygon fill="#A80036" points="1465,486.332,1469,496.332,1473,486.332,1469,490.332" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1225" x2="1049" y1="218.7773" y2="218.7773"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1049" x2="1049" y1="218.7773" y2="240.7773"/><polygon fill="#A80036" points="1045,230.7773,1049,240.7773,1053,230.7773,1049,234.7773" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1293" x2="1469" y1="218.7773" y2="218.7773"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1469" x2="1469" y1="218.7773" y2="240.7773"/><polygon fill="#A80036" points="1465,230.7773,1469,240.7773,1473,230.7773,1469,234.7773" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1049" x2="1049" y1="348.5547" y2="550.7207"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1049" x2="1247" y1="550.7207" y2="550.7207"/><polygon fill="#A80036" points="1237,546.7207,1247,550.7207,1237,554.7207,1241,550.7207" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1469" x2="1469" y1="532.7207" y2="550.7207"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1469" x2="1271" y1="550.7207" y2="550.7207"/><polygon fill="#A80036" points="1281,546.7207,1271,550.7207,1281,554.7207,1277,550.7207" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="158" x2="158" y1="186.7773" y2="206.7773"/><polygon fill="#A80036" points="154,196.7773,158,206.7773,162,196.7773,158,200.7773" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="158" x2="158" y1="243.166" y2="582.7207"/><polygon fill="#A80036" points="154,572.7207,158,582.7207,162,572.7207,158,576.7207" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="356" x2="356" y1="186.7773" y2="206.7773"/><polygon fill="#A80036" points="352,196.7773,356,206.7773,360,196.7773,356,200.7773" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="356" x2="356" y1="243.166" y2="582.7207"/><polygon fill="#A80036" points="352,572.7207,356,582.7207,360,572.7207,356,576.7207" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="488" x2="488" y1="186.7773" y2="206.7773"/><polygon fill="#A80036" points="484,196.7773,488,206.7773,492,196.7773,488,200.7773" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="488" x2="488" y1="314.5547" y2="582.7207"/><polygon fill="#A80036" points="484,572.7207,488,582.7207,492,572.7207,488,576.7207" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="726.5" x2="726.5" y1="186.7773" y2="206.7773"/><polygon fill="#A80036" points="722.5,196.7773,726.5,206.7773,730.5,196.7773,726.5,200.7773" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="726.5" x2="726.5" y1="385.9434" y2="582.7207"/><polygon fill="#A80036" points="722.5,572.7207,726.5,582.7207,730.5,572.7207,726.5,576.7207" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1259" x2="1259" y1="186.7773" y2="206.7773"/><polygon fill="#A80036" points="1255,196.7773,1259,206.7773,1263,196.7773,1259,200.7773" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1259" x2="1259" y1="562.7207" y2="582.7207"/><polygon fill="#A80036" points="1255,572.7207,1259,582.7207,1263,572.7207,1259,576.7207" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="192" x2="327.5" y1="174.7773" y2="174.7773"/><polygon fill="#A80036" points="317.5,170.7773,327.5,174.7773,317.5,178.7773,321.5,174.7773" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="384.5" x2="454" y1="174.7773" y2="174.7773"/><polygon fill="#A80036" points="444,170.7773,454,174.7773,444,178.7773,448,174.7773" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="522" x2="692" y1="174.7773" y2="174.7773"/><polygon fill="#A80036" points="682,170.7773,692,174.7773,682,178.7773,686,174.7773" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="761" x2="1225" y1="174.7773" y2="174.7773"/><polygon fill="#A80036" points="1215,170.7773,1225,174.7773,1215,178.7773,1219,174.7773" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="881.5" x2="881.5" y1="142.7773" y2="147.7773"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="881.5" x2="158" y1="147.7773" y2="147.7773"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="158" x2="158" y1="147.7773" y2="162.7773"/><polygon fill="#A80036" points="154,152.7773,158,162.7773,162,152.7773,158,156.7773" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1293" x2="1737" y1="174.7773" y2="174.7773"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1737" x2="1737" y1="174.7773" y2="582.7207"/><polygon fill="#A80036" points="1733,572.7207,1737,582.7207,1741,572.7207,1737,576.7207" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="158" x2="1737" y1="582.7207" y2="582.7207"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="881.5" x2="881.5" y1="582.7207" y2="602.7207"/><polygon fill="#A80036" points="877.5,592.7207,881.5,602.7207,885.5,592.7207,881.5,596.7207" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="881.5" x2="881.5" y1="639.1094" y2="659.1094"/><polygon fill="#A80036" points="877.5,649.1094,881.5,659.1094,885.5,649.1094,881.5,653.1094" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="881.5" x2="881.5" y1="695.498" y2="715.498"/><polygon fill="#A80036" points="877.5,705.498,881.5,715.498,885.5,705.498,881.5,709.498" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml

start

:通过参数的值创建节点;
:判断节点类型，做不通的操作;
if(文本节点) 
    :通过document.createTextNode创建真实的文本节点;
elseif(空节点)
    :什么都不做;
elseif(数组节点)
    :遍历数组;
    :将数组每一项递归创建节点;
elseif(DOM节点)
    :通过document.createElement创建真实的DOM对象;
    :立即设置该真实DOM元素的各种属性;
    :遍历对应React元素的children属性，递归操作;

elseif(组件节点)
    if(组件节点) then(函数组件)
        :调用函数(该函数必须返回一个可以生成节点的内容);
        :将该函数的返回结果递归生成节点;
    else(类组件)
        :建该类的实例;
        :立即调用对象的生命周期方法：static getDerivedStateFromProps;
        :运行该对象的render方法，拿到节点对象1. （将该节点递归操作，回到第1步进行反复操作）;
        :将该组件的componentDidMount加入到执行队列（先进先出，先进先执行）;
        :当整个虚拟DOM树全部构建完毕，并且将真实的DOM对象加入到容器中后，执行该队列;
    endif
endif
:生成出虚拟DOM树之后，将该树保存起来，以便后续使用;
:将之前生成的真实的DOM对象，加入到容器中;

stop

@enduml

PlantUML version 1.2019.09(Tue Aug 27 00:19:51 CST 2019)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.8.0_201-b09
Operating System: Windows 10
OS Version: 10.0
Default Encoding: GBK
Language: zh
Country: CN
--></g></svg>