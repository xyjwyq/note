<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="575px" preserveAspectRatio="none" style="width:621px;height:575px;" version="1.1" viewBox="0 0 621 575" width="621px" zoomAndPan="magnify"><defs><filter height="300%" id="fi6bly36ey8zx" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><ellipse cx="304" cy="20" fill="#000000" filter="url(#fi6bly36ey8zx)" rx="10" ry="10" style="stroke: none; stroke-width: 1.0;"/><polygon fill="#FEFECE" filter="url(#fi6bly36ey8zx)" points="231.5,94,376.5,94,388.5,106,376.5,118,231.5,118,219.5,106,231.5,94" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="19" x="308" y="130.606">true</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="231.5" y="111.0945">是否调用$mount函数挂载节点</text><ellipse cx="421.5" cy="106" fill="#FFFFFF" filter="url(#fi6bly36ey8zx)" rx="11" ry="11" style="stroke: #000000; stroke-width: 1.0;"/><ellipse cx="421.5" cy="106" fill="#000000" rx="6" ry="6" style="stroke: #7F7F7F; stroke-width: 1.0;"/><polygon fill="#FEFECE" filter="url(#fi6bly36ey8zx)" points="272.5,50,335.5,50,347.5,62,335.5,74,272.5,74,260.5,62,272.5,50" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="272.5" y="67.0945">是否有el属性</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="19" x="347.5" y="59.583">true</text><polygon fill="#FEFECE" filter="url(#fi6bly36ey8zx)" points="304,152.106,316,164.106,304,176.106,292,164.106,304,152.106" style="stroke: #A80036; stroke-width: 1.5;"/><polygon fill="#FEFECE" filter="url(#fi6bly36ey8zx)" points="256.5,196.106,351.5,196.106,363.5,208.106,351.5,220.106,256.5,220.106,244.5,208.106,256.5,196.106" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="256.5" y="213.2004">是否有template属性</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="19" x="225.5" y="205.689">true</text><rect fill="#FEFECE" filter="url(#fi6bly36ey8zx)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="278" x="10" y="230.106"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="258" x="20" y="253.8579">解析template中的字符串，生成抽象语法书(AST)</text><rect fill="#FEFECE" filter="url(#fi6bly36ey8zx)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="200" x="359" y="230.106"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="180" x="369" y="253.8579">根据挂载的元素找到其outerHTML</text><rect fill="#FEFECE" filter="url(#fi6bly36ey8zx)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="308" y="286.4946"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="282" x="318" y="310.2466">解析outerHTML获取的字符串，生成抽象语法书(AST)</text><polygon fill="#FEFECE" filter="url(#fi6bly36ey8zx)" points="304,328.8833,316,340.8833,304,352.8833,292,340.8833,304,328.8833" style="stroke: #A80036; stroke-width: 1.5;"/><rect fill="#FEFECE" filter="url(#fi6bly36ey8zx)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="209.5" y="372.8833"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="169" x="219.5" y="396.6353">利用render函数，生成虚拟dom</text><rect fill="#FEFECE" filter="url(#fi6bly36ey8zx)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="182" x="213" y="429.272"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="162" x="223" y="453.0239">将虚拟DOM，生成真实的DOM</text><rect fill="#FEFECE" filter="url(#fi6bly36ey8zx)" height="36.3887" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="242" x="183" y="485.6606"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="222" x="193" y="509.4126">用生成的真实DOM，替换挂载的DOM元素</text><ellipse cx="304" cy="553.0493" fill="#FFFFFF" filter="url(#fi6bly36ey8zx)" rx="11" ry="11" style="stroke: #000000; stroke-width: 1.0;"/><ellipse cx="304" cy="553.0493" fill="#000000" rx="6" ry="6" style="stroke: #7F7F7F; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="304" x2="304" y1="118" y2="152.106"/><polygon fill="#A80036" points="300,142.106,304,152.106,308,142.106,304,146.106" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="388.5" x2="410.5" y1="106" y2="106"/><polygon fill="#A80036" points="400.5,102,410.5,106,400.5,110,404.5,106" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="304" x2="304" y1="74" y2="94"/><polygon fill="#A80036" points="300,84,304,94,308,84,304,88" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="347.5" x2="454.5" y1="62" y2="62"/><polygon fill="#A80036" points="450.5,121.5115,454.5,131.5115,458.5,121.5115,454.5,125.5115" style="stroke: #A80036; stroke-width: 1.5;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="454.5" x2="454.5" y1="62" y2="164.106"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="454.5" x2="316" y1="164.106" y2="164.106"/><polygon fill="#A80036" points="326,160.106,316,164.106,326,168.106,322,164.106" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="304" x2="304" y1="30" y2="50"/><polygon fill="#A80036" points="300,40,304,50,308,40,304,44" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="459" x2="459" y1="266.4946" y2="286.4946"/><polygon fill="#A80036" points="455,276.4946,459,286.4946,463,276.4946,459,280.4946" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="244.5" x2="149" y1="208.106" y2="208.106"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="149" x2="149" y1="208.106" y2="230.106"/><polygon fill="#A80036" points="145,220.106,149,230.106,153,220.106,149,224.106" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="363.5" x2="459" y1="208.106" y2="208.106"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="459" x2="459" y1="208.106" y2="230.106"/><polygon fill="#A80036" points="455,220.106,459,230.106,463,220.106,459,224.106" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="149" x2="149" y1="266.4946" y2="340.8833"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="149" x2="292" y1="340.8833" y2="340.8833"/><polygon fill="#A80036" points="282,336.8833,292,340.8833,282,344.8833,286,340.8833" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="459" x2="459" y1="322.8833" y2="340.8833"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="459" x2="316" y1="340.8833" y2="340.8833"/><polygon fill="#A80036" points="326,336.8833,316,340.8833,326,344.8833,322,340.8833" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="304" x2="304" y1="176.106" y2="196.106"/><polygon fill="#A80036" points="300,186.106,304,196.106,308,186.106,304,190.106" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="304" x2="304" y1="352.8833" y2="372.8833"/><polygon fill="#A80036" points="300,362.8833,304,372.8833,308,362.8833,304,366.8833" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="304" x2="304" y1="409.272" y2="429.272"/><polygon fill="#A80036" points="300,419.272,304,429.272,308,419.272,304,423.272" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="304" x2="304" y1="465.6606" y2="485.6606"/><polygon fill="#A80036" points="300,475.6606,304,485.6606,308,475.6606,304,479.6606" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="304" x2="304" y1="522.0493" y2="542.0493"/><polygon fill="#A80036" points="300,532.0493,304,542.0493,308,532.0493,304,536.0493" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml

start
if(是否有el属性) then(true)
else
    if(是否调用$mount函数挂载节点) then(true)
    else 
        stop
    endif    
endif

if(是否有template属性) then(true)
    :解析template中的字符串，生成抽象语法书(AST);
else 
    :根据挂载的元素找到其outerHTML;
    :解析outerHTML获取的字符串，生成抽象语法书(AST);
endif   

:利用render函数，生成虚拟dom;
:将虚拟DOM，生成真实的DOM;
:用生成的真实DOM，替换挂载的DOM元素;
stop

@enduml

PlantUML version 1.2019.09(Tue Aug 27 00:19:51 CST 2019)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.8.0_201-b09
Operating System: Windows 10
OS Version: 10.0
Default Encoding: GBK
Language: zh
Country: CN
--></g></svg>